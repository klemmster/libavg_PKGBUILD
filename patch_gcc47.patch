*** src/base/TimeSource.cpp.orig	2012-04-11 22:00:34.149525342 +0200
--- src/base/TimeSource.cpp	2012-04-11 21:59:21.316196996 +0200
***************
*** 39,44 ****
--- 39,45 ----
  #include <assert.h>
  #include <iostream>
  #include <sstream>
+ #include <unistd.h>

  using namespace std;

*** src/base/FileHelper.cpp.orig	2012-04-11 22:00:58.089523700 +0200
--- src/base/FileHelper.cpp	2012-04-11 21:58:56.946198665 +0200
***************
*** 36,41 ****
--- 36,42 ----
  #include <cstring>
  #include <iostream>
  #include <fstream>
+ #include <unistd.h>

  using namespace std;

Index: src/base/CmdQueue.h
===================================================================
--- src/base/CmdQueue.h	(revision 7229)
+++ src/base/CmdQueue.h	(revision 7230)
@@ -41,7 +41,7 @@
 template<class RECEIVER>
 void CmdQueue<RECEIVER>::pushCmd(typename Command<RECEIVER>::CmdFunc func)
 {
-    push(CmdPtr(new Command<RECEIVER>(func)));
+    this->push(CmdPtr(new Command<RECEIVER>(func)));
 }

 }
Index: src/imaging/TrackerThread.cpp
===================================================================
--- src/imaging/TrackerThread.cpp	(revision 7229)
+++ src/imaging/TrackerThread.cpp	(revision 7230)
@@ -138,7 +138,7 @@
         ScopeTimer timer(ProfilingZoneCapture);
         pCamBmp = m_pCamera->getImage(true);
         BitmapPtr pTempBmp1;
-        while (pTempBmp1 = m_pCamera->getImage(false)) {
+        while ((pTempBmp1 = m_pCamera->getImage(false))) {
             m_NumCamFramesDiscarded++;
             m_NumFrames++;
             pCamBmp = pTempBmp1;
*** ../libavg-1.7.1/src/base/Rect.h	2012-01-26 17:01:32.000000000 +0100
--- src/base/Rect.h	2012-04-12 17:02:58.189660243 +0200
***************
*** 171,189 ****
  template<class NUM>
  void Rect<NUM>::expand(const Rect<NUM>& rect)
  {
!     tl.x = min(tl.x, rect.tl.x);
!     tl.y = min(tl.y, rect.tl.y);
!     br.x = max(br.x, rect.br.x);
!     br.y = max(br.y, rect.br.y);
  }
  
  template<class NUM>
  void Rect<NUM>::intersect(const Rect<NUM>& rect)
  {
!     tl.x = max(tl.x, rect.tl.x);
!     tl.y = max(tl.y, rect.tl.y);
!     br.x = min(br.x, rect.br.x);
!     br.y = min(br.y, rect.br.y);
  }
  
  template<class NUM>
--- 171,189 ----
  template<class NUM>
  void Rect<NUM>::expand(const Rect<NUM>& rect)
  {
!     tl.x = std::min(tl.x, rect.tl.x);
!     tl.y = std::min(tl.y, rect.tl.y);
!     br.x = std::max(br.x, rect.br.x);
!     br.y = std::max(br.y, rect.br.y);
  }
  
  template<class NUM>
  void Rect<NUM>::intersect(const Rect<NUM>& rect)
  {
!     tl.x = std::max(tl.x, rect.tl.x);
!     tl.y = std::max(tl.y, rect.tl.y);
!     br.x = std::min(br.x, rect.br.x);
!     br.y = std::min(br.y, rect.br.y);
  }
  
  template<class NUM>
*** ../libavg-1.7.1/src/parport/ParPort.cpp	2011-12-07 13:58:55.000000000 +0100
--- src/parport/ParPort.cpp	2012-04-12 17:09:06.709635005 +0200
***************
*** 35,40 ****
--- 35,41 ----
  #include <sys/stat.h>
  #include <fcntl.h>
  #include <sys/ioctl.h>
+ #include <unistd.h>
  
  #include <cstring>
  #include <iostream>
